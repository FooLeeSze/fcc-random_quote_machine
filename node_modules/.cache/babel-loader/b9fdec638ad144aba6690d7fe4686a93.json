{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee Sze\\\\Documents\\\\fcc-frontend-lib-proj\\\\random_quote_machine\\\\random_quote_machine\\\\src\\\\Quote.js\";\nimport React from 'react';\nimport twitterIcon from './images/icons8-twitter-60-crop2.svg';\nimport copyIcon from './images/copy.svg'; // Quotable API link to get random quote\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_url = \"https://api.quotable.io/random\"; // Function that generates string of quote + author in correct format\n\nfunction genFullQuote(quote, author) {\n  return quote + \"\\\" -\" + author;\n}\n\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props); // Initialize state\n\n    this.state = {\n      quote: '',\n      author: '',\n      fetchComplete: false\n    };\n    this.newQuote = this.newQuote.bind(this);\n    this.copyText = this.copyText.bind(this);\n  } // Get first quote\n\n\n  componentDidMount() {\n    this.newQuote();\n  } // Get new quote on clicking of \"New quote\" button\n\n\n  async newQuote() {\n    try {\n      fetch(api_url).then(data => data.json()).then(data => {\n        this.setState({\n          quote: data.content,\n          author: data.author,\n          fetchComplete: true\n        });\n      });\n    } catch (error) {\n      console.error('Failed to fetch quote');\n    }\n  } // Copy quote to clipboard on clicking \"Copy link\" button\n  // Then pop up an alert to notify user\n\n\n  copyText() {\n    navigator.clipboard.writeText(genFullQuote(this.state.quote, this.state.author));\n    document.getElementById('copy-alert-container').style.display = 'block';\n    setTimeout(() => document.getElementById('copy-alert-container').style.display = 'none', 2000);\n  }\n\n  render() {\n    var renderThis; // If done fetching quote, render the quote box\n    // else, render loading text\n\n    if (this.state.fetchComplete) {\n      renderThis = /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"quote-symbol\",\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 35\n          }, this), this.state.quote, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"quote-symbol\",\n            children: \"\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"author\",\n          children: \"- \" + this.state.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: this.newQuote,\n          children: \"New quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"share\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            id: \"tweet-quote\",\n            className: \"share-button\",\n            href: \"https://twitter.com/intent/tweet?text=\\\"\" + genFullQuote(this.state.quote, this.state.author),\n            title: \"Tweet quote\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"share-icon\",\n              id: \"twitter-icon\",\n              src: twitterIcon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 225\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"copy-text\",\n            className: \"share-button\",\n            title: \"Copy quote\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"share-icon\",\n              id: \"copy-icon\",\n              src: copyIcon,\n              alt: \"\",\n              onClick: this.copyText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 92\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"copy-alert-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"copy-alert\",\n            children: \"Copied to clipboard!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } else {\n      renderThis = /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"loading-text\",\n        children: \"Asking a philosopher...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"main-content\",\n      children: renderThis\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"names":["React","twitterIcon","copyIcon","api_url","genFullQuote","quote","author","QuoteBox","Component","constructor","props","state","fetchComplete","newQuote","bind","copyText","componentDidMount","fetch","then","data","json","setState","content","error","console","navigator","clipboard","writeText","document","getElementById","style","display","setTimeout","render","renderThis"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/src/Quote.js"],"sourcesContent":["import React from 'react'\r\nimport twitterIcon from './images/icons8-twitter-60-crop2.svg'\r\nimport copyIcon from './images/copy.svg'\r\n\r\n// Quotable API link to get random quote\r\nconst api_url = \"https://api.quotable.io/random\";\r\n\r\n// Function that generates string of quote + author in correct format\r\nfunction genFullQuote(quote, author) {\r\n    return (quote + \"\\\" -\" + author)\r\n}\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Initialize state\r\n        this.state = {\r\n            quote: '',\r\n            author: '',\r\n            fetchComplete: false\r\n        }\r\n\r\n        this.newQuote = this.newQuote.bind(this);\r\n        this.copyText = this.copyText.bind(this);\r\n    }\r\n\r\n    // Get first quote\r\n    componentDidMount() {\r\n        this.newQuote();\r\n    }\r\n\r\n    // Get new quote on clicking of \"New quote\" button\r\n    async newQuote() {\r\n        try {\r\n            fetch(api_url)                      \r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        quote: data.content,    \r\n                        author: data.author,\r\n                        fetchComplete: true\r\n                    })\r\n                });\r\n        } catch (error) {\r\n            console.error('Failed to fetch quote')\r\n        }\r\n    }\r\n\r\n    // Copy quote to clipboard on clicking \"Copy link\" button\r\n    // Then pop up an alert to notify user\r\n    copyText() {\r\n        navigator.clipboard.writeText(genFullQuote(this.state.quote, this.state.author));\r\n\r\n        document.getElementById('copy-alert-container').style.display = 'block';\r\n        setTimeout(() => document.getElementById('copy-alert-container').style.display = 'none', 2000);\r\n    }\r\n\r\n    render() {\r\n        var renderThis;\r\n        // If done fetching quote, render the quote box\r\n        // else, render loading text\r\n        if(this.state.fetchComplete) {\r\n            renderThis = (\r\n                <div  id=\"quote-box\">\r\n                    <h1 id='text'><span className=\"quote-symbol\">\"</span>{this.state.quote}<span className=\"quote-symbol\">\"</span></h1>\r\n                    <p id=\"author\">{\"- \" + this.state.author}</p>\r\n                    <button id=\"new-quote\" onClick={this.newQuote}>New quote</button>\r\n                    <div id=\"share\">\r\n                        <a target=\"_blank\" rel=\"noreferrer\" id=\"tweet-quote\" className=\"share-button\" href={\"https://twitter.com/intent/tweet?text=\\\"\" + genFullQuote(this.state.quote, this.state.author)} title=\"Tweet quote\"><img className=\"share-icon\" id=\"twitter-icon\" src={twitterIcon} alt=\"\" /></a>\r\n                        <button id=\"copy-text\" className=\"share-button\" title=\"Copy quote\"><img className=\"share-icon\" id=\"copy-icon\" src={copyIcon} alt=\"\" onClick={this.copyText} /></button>\r\n                    </div>\r\n                    <div id=\"copy-alert-container\">\r\n                        <p id=\"copy-alert\">Copied to clipboard!</p>\r\n                    </div> \r\n                </div>\r\n            )\r\n        } else {\r\n            renderThis = (\r\n                <h3 id=\"loading-text\">Asking a philosopher...</h3>\r\n            )\r\n        }\r\n\r\n         return (\r\n            <section id=\"main-content\">\r\n                {renderThis}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuoteBox"],"mappings":"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"},"metadata":{},"sourceType":"module"}