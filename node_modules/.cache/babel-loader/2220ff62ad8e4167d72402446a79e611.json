{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import twitterIcon from'./images/icons8-twitter-60-crop2.svg';import copyIcon from'./images/copy.svg';// Quotable API link to get random quote\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var api_url=\"https://api.quotable.io/random\";// Function that generates string of quote + author in correct format\nfunction genFullQuote(quote,author){return\"\\\"\"+quote+\"\\\" -\"+author;}var QuoteBox=/*#__PURE__*/function(_React$Component){_inherits(QuoteBox,_React$Component);var _super=_createSuper(QuoteBox);function QuoteBox(props){var _this;_classCallCheck(this,QuoteBox);_this=_super.call(this,props);// Initialize state\n_this.state={quote:'',author:'',fetchComplete:false};_this.newQuote=_this.newQuote.bind(_assertThisInitialized(_this));_this.copyText=_this.copyText.bind(_assertThisInitialized(_this));return _this;}// Get first quote\n_createClass(QuoteBox,[{key:\"componentDidMount\",value:function componentDidMount(){this.newQuote();}// Get new quote on clicking of \"New quote\" button\n},{key:\"newQuote\",value:function(){var _newQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _this2=this;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:try{fetch(api_url)//Fetch random quote\n.then(function(data){return data.json();}).then(function(data){_this2.setState({quote:data.content,// Update state\nauthor:data.author,fetchComplete:true});});}catch(error){console.error('Failed to fetch quote');}case 1:case\"end\":return _context.stop();}}},_callee);}));function newQuote(){return _newQuote.apply(this,arguments);}return newQuote;}()// Copy quote to clipboard on clicking \"Copy link\" button\n// Then pop up an alert to notify user\n},{key:\"copyText\",value:function copyText(){navigator.clipboard.writeText(genFullQuote(this.state.quote,this.state.author));document.getElementById('copy-alert-container').style.display='block';setTimeout(function(){return document.getElementById('copy-alert-container').style.display='none';},2000);}},{key:\"render\",value:function render(){var renderThis;// If done fetching quote, render the quote box\n// else, render loading text\nif(this.state.fetchComplete){renderThis=/*#__PURE__*/_jsxs(\"div\",{id:\"quote-box\",children:[/*#__PURE__*/_jsxs(\"h1\",{id:\"text\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"quote-symbol\",children:\"\\\"\"}),this.state.quote,/*#__PURE__*/_jsx(\"span\",{className:\"quote-symbol\",children:\"\\\"\"})]}),/*#__PURE__*/_jsx(\"p\",{id:\"author\",children:\"- \"+this.state.author}),/*#__PURE__*/_jsx(\"button\",{id:\"new-quote\",onClick:this.newQuote,children:\"New quote\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"share\",children:[/*#__PURE__*/_jsx(\"a\",{target:\"_blank\",rel:\"noreferrer\",id:\"tweet-quote\",className:\"share-button\",href:\"https://twitter.com/intent/tweet?text=\"+genFullQuote(this.state.quote,this.state.author),title:\"Tweet quote\",children:/*#__PURE__*/_jsx(\"img\",{className:\"share-icon\",id:\"twitter-icon\",src:twitterIcon,alt:\"\"})}),/*#__PURE__*/_jsx(\"button\",{id:\"copy-text\",className:\"share-button\",title:\"Copy quote\",children:/*#__PURE__*/_jsx(\"img\",{className:\"share-icon\",id:\"copy-icon\",src:copyIcon,alt:\"\",onClick:this.copyText})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"copy-alert-container\",children:/*#__PURE__*/_jsx(\"p\",{id:\"copy-alert\",children:\"Copied to clipboard!\"})})]});}else{renderThis=/*#__PURE__*/_jsx(\"h3\",{id:\"loading-text\",children:\"Asking a philosopher...\"});}return/*#__PURE__*/_jsx(\"section\",{id:\"main-content\",children:renderThis});}}]);return QuoteBox;}(React.Component);export default QuoteBox;","map":{"version":3,"names":["React","twitterIcon","copyIcon","api_url","genFullQuote","quote","author","QuoteBox","props","state","fetchComplete","newQuote","bind","copyText","fetch","then","data","json","setState","content","error","console","navigator","clipboard","writeText","document","getElementById","style","display","setTimeout","renderThis","Component"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/src/QuoteBox.js"],"sourcesContent":["import React from 'react'\r\nimport twitterIcon from './images/icons8-twitter-60-crop2.svg'\r\nimport copyIcon from './images/copy.svg'\r\n\r\n// Quotable API link to get random quote\r\nconst api_url = \"https://api.quotable.io/random\";\r\n\r\n// Function that generates string of quote + author in correct format\r\nfunction genFullQuote(quote, author) {\r\n    return (\"\\\"\" + quote + \"\\\" -\" + author)\r\n}\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Initialize state\r\n        this.state = {\r\n            quote: '',\r\n            author: '',\r\n            fetchComplete: false\r\n        }\r\n\r\n        this.newQuote = this.newQuote.bind(this);\r\n        this.copyText = this.copyText.bind(this);\r\n    }\r\n\r\n    // Get first quote\r\n    componentDidMount() {\r\n        this.newQuote();\r\n    }\r\n\r\n    // Get new quote on clicking of \"New quote\" button\r\n    async newQuote() {\r\n        try {\r\n            fetch(api_url)                      //Fetch random quote\r\n                .then(data => data.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        quote: data.content,    // Update state\r\n                        author: data.author,\r\n                        fetchComplete: true\r\n                    })\r\n                });\r\n        } catch (error) {\r\n            console.error('Failed to fetch quote')\r\n        }\r\n    }\r\n\r\n    // Copy quote to clipboard on clicking \"Copy link\" button\r\n    // Then pop up an alert to notify user\r\n    copyText() {\r\n        navigator.clipboard.writeText(genFullQuote(this.state.quote, this.state.author));\r\n\r\n        document.getElementById('copy-alert-container').style.display = 'block';\r\n        setTimeout(() => document.getElementById('copy-alert-container').style.display = 'none', 2000);\r\n    }\r\n\r\n    render() {\r\n        var renderThis;\r\n        // If done fetching quote, render the quote box\r\n        // else, render loading text\r\n        if(this.state.fetchComplete) {\r\n            renderThis = (\r\n                <div  id=\"quote-box\">\r\n                    <h1 id='text'><span className=\"quote-symbol\">\"</span>{this.state.quote}<span className=\"quote-symbol\">\"</span></h1>\r\n                    <p id=\"author\">{\"- \" + this.state.author}</p>\r\n                    <button id=\"new-quote\" onClick={this.newQuote}>New quote</button>\r\n                    <div id=\"share\">\r\n                        <a target=\"_blank\" rel=\"noreferrer\" id=\"tweet-quote\" className=\"share-button\" href={\"https://twitter.com/intent/tweet?text=\" + genFullQuote(this.state.quote, this.state.author)} title=\"Tweet quote\"><img className=\"share-icon\" id=\"twitter-icon\" src={twitterIcon} alt=\"\" /></a>\r\n                        <button id=\"copy-text\" className=\"share-button\" title=\"Copy quote\"><img className=\"share-icon\" id=\"copy-icon\" src={copyIcon} alt=\"\" onClick={this.copyText} /></button>\r\n                    </div>\r\n                    <div id=\"copy-alert-container\">\r\n                        <p id=\"copy-alert\">Copied to clipboard!</p>\r\n                    </div> \r\n                </div>\r\n            )\r\n        } else {\r\n            renderThis = (\r\n                <h3 id=\"loading-text\">Asking a philosopher...</h3>\r\n            )\r\n        }\r\n\r\n         return (\r\n            <section id=\"main-content\">\r\n                {renderThis}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuoteBox"],"mappings":"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"},"metadata":{},"sourceType":"module"}