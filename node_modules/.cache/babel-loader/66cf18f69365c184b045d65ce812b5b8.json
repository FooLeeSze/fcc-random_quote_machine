{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee Sze\\\\Documents\\\\fcc-frontend-lib-proj\\\\random_quote_machine\\\\random_quote_machine\\\\src\\\\Quote.js\";\nimport React from 'react';\nimport { quoteData } from './quoteData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: 'Anytime someone tells me that I can\\'t do something, I want to do it more.'\n    };\n    this.newQuote = this.newQuote.bind(this);\n  }\n\n  newQuote() {\n    const randNum = Math.floor(Math.random() * quoteData.length);\n    console.log(randNum);\n    this.setState({\n      quote: quoteData[randNum].quote\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quoteSymbol\",\n          children: \"\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 31\n        }, this), this.state.quote, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"quoteSymbol\",\n          children: \"\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: this.newQuote,\n        children: \"New quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"share\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"tweet-quote\",\n          href: \"#\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QuoteBox;","map":{"version":3,"names":["React","quoteData","QuoteBox","Component","constructor","props","state","quote","newQuote","bind","randNum","Math","floor","random","length","console","log","setState","render"],"sources":["C:/Users/Lee Sze/Documents/fcc-frontend-lib-proj/random_quote_machine/random_quote_machine/src/Quote.js"],"sourcesContent":["import React from 'react'\r\nimport {quoteData} from './quoteData';\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            quote: 'Anytime someone tells me that I can\\'t do something, I want to do it more.'\r\n        }\r\n\r\n        this.newQuote = this.newQuote.bind(this);\r\n    }\r\n\r\n    newQuote() {\r\n        const randNum = Math.floor(Math.random() * quoteData.length);\r\n        console.log(randNum)\r\n        this.setState({\r\n            quote: quoteData[randNum].quote})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"quote-box\">\r\n                <h1 id='text'><span className=\"quoteSymbol\">\"</span>{this.state.quote}<span className=\"quoteSymbol\">\"</span></h1>\r\n                <p id=\"author\"></p>\r\n                <button id=\"new-quote\" onClick={this.newQuote}>New quote</button>\r\n                <div id=\"share\">\r\n                    <a id=\"tweet-quote\" href=\"#\">Tweet</a>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default QuoteBox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;EACnCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACTC,KAAK,EAAE;IADE,CAAb;IAIA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;EACH;;EAEDD,QAAQ,GAAG;IACP,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,SAAS,CAACa,MAArC,CAAhB;IACAC,OAAO,CAACC,GAAR,CAAYN,OAAZ;IACA,KAAKO,QAAL,CAAc;MACVV,KAAK,EAAEN,SAAS,CAACS,OAAD,CAAT,CAAmBH;IADhB,CAAd;EAEH;;EAEDW,MAAM,GAAG;IACL,oBACI;MAAK,EAAE,EAAC,WAAR;MAAA,wBACI;QAAI,EAAE,EAAC,MAAP;QAAA,wBAAc;UAAM,SAAS,EAAC,aAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAd,EAAqD,KAAKZ,KAAL,CAAWC,KAAhE,eAAsE;UAAM,SAAS,EAAC,aAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAtE;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAG,EAAE,EAAC;MAAN;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAQ,EAAE,EAAC,WAAX;QAAuB,OAAO,EAAE,KAAKC,QAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAK,EAAE,EAAC,OAAR;QAAA,uBACI;UAAG,EAAE,EAAC,aAAN;UAAoB,IAAI,EAAC,GAAzB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AA9BkC;;AAkCvC,eAAeN,QAAf"},"metadata":{},"sourceType":"module"}